#
# Requires artillery.io installed.
#   Install on linux (debian) by running:
#     sudo npm install -g artillery
# Run from terminal:
#   artillery run -o result.json performance-test.yml
# To generate a report run:
#   artillery report result.json
#
config:
  target: "http://codecloud.local:8080"
  phases:
    - duration: 20 # The duration of the test in seconds
      arrivalRate: 2 # The average number of virtual users pr. sec.
scenarios:
  - name: "Simulate an ultra fast typist (~100 WPM) that types in the editor"
    weight: 2 # Average of 2% of all users
    engine: "socketio" # Use socketio connection
    flow:
      - get:
          url: "/" # Regular HTTP GET request
      - emit:
          channel: "getText" # The event to send to the server
          namespace: "/collab" # The namespace for the socket defined by the server
      #- think: 5 # BEWARE!! Think may cause a LOT of ECONNRESET errors when testing..
      - loop: # Loop the sendText event via socket.io
        - emit:
            channel: "sendText"
            data: >
                {"action":"insert","positionStart":{"row":0,"column":0},"content":["u\n"],"positionEnd":{"row":0,"column":1}}
            namespace: "/collab"
        - think: 0.110 # Wait X seconds before sending new data
        count: 530 # Simulate X amount of character sent
  - name: "Simulate a fast typist (~50 WPM) that types in the editor"
    weight: 8 # Average of 8% of all users
    engine: "socketio" # Use socketio connection
    flow:
      - get:
          url: "/" # Regular HTTP GET request
      - emit:
          channel: "getText" # The event to send to the server
          namespace: "/collab" # The namespace for the socket defined by the server
      - think: 5
      - loop: # Loop the sendText event via socket.io
        - emit:
            channel: "sendText"
            data: >
                {"action":"insert","positionStart":{"row":0,"column":0},"content":["f\n"],"positionEnd":{"row":0,"column":1}}
            namespace: "/collab"
        - think: 0.240 # Wait X seconds before sending new data
        count: 250 # Simulate X amount of character sent
  - name: "Simulate an average (~25 WPM) typist that types in the editor"
    weight: 20 # Average of 20% of all users
    engine: "socketio" # Use socketio connection
    flow:
      - get:
          url: "/" # Regular HTTP GET request
      - emit:
          channel: "getText" # The event to send to the server
          namespace: "/collab" # The namespace for the socket defined by the server
      - think: 5
      - loop: # Loop the sendText event via socket.io
        - emit:
            channel: "sendText"
            data: >
                {"action":"insert","positionStart":{"row":0,"column":0},"content":["a\n"],"positionEnd":{"row":0,"column":1}}
            namespace: "/collab"
        - think: 0.480 # Wait X seconds before sending new data
        count: 125 # Simulate X amount of character sent
  - name: "Simulate a slow (~10 WPM) typist that types in the editor"
    weight: 50 # Average of 50% of all users
    engine: "socketio" # Use socketio connection
    flow:
      - get:
          url: "/" # Regular HTTP GET request
      - emit:
          channel: "getText" # The event to send to the server
          namespace: "/collab" # The namespace for the socket defined by the server
      - think: 5
      - loop: # Loop the sendText event via socket.io
        - emit:
            channel: "sendText"
            data: >
                {"action":"insert","positionStart":{"row":0,"column":0},"content":["s\n"],"positionEnd":{"row":0,"column":1}}
            namespace: "/collab"
        - think: 1 # Wait X seconds before sending new data
        count: 60 # Simulate X amount of character sent
  - name: "Simulate a copy/paste user that uses the editor"
    weight: 10 # Average of 10% of all users
    engine: "socketio" # Use socketio connection
    flow:
      - get:
          url: "/" # Regular HTTP GET request
      - emit:
          channel: "getText" # The event to send to the server
          namespace: "/collab" # The namespace for the socket defined by the server
      - think: 5
      - loop: # Loop the sendText event via socket.io
        - emit:
            channel: "sendText"
            data: >
                {"action":"insert","positionStart":{"row":0,"column":0},"content":["Copy/pasted\n"],"positionEnd":{"row":0,"column":1}}
            namespace: "/collab"
        - think: 4 # Wait X seconds before sending new data
        count: 15 # Simulate X amount chunks sent
  - name: "Simulate a lurker on the main page"
    weight: 10 # Roughly 10% of the scenarios is estimated to be users lurking in a file
    engine: "socketio" # Use socketio connection
    flow:
      - get:
          url: "/" # Regular HTTP GET request
      - emit:
          channel: "getText" # The event to send to the server
          namespace: "/collab" # The namespace for the socket defined by the server
      - think: 60 # Sit and lurk in the channel